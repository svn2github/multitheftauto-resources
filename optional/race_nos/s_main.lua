g_Root = getRootElement();g_ResRoot = getResourceRootElement();addEventHandler( "onElementDataChange", getRootElement(),	function( key, value )		--outputChatBox( "data changed (server event): ".. key .." : ".. getElementData( source, key ) );	end)function table.size( tab )	local size = 0;	for i = 1, pairs( tab ) do		size = size + 1;	end	return size;end--[[]]addEvent( "onGamemodeMapStart" )addEventHandler( "onGamemodeMapStart", g_Root,	function( resMap )		g_MapRes = resMap;		--outputChatBox( "vehicles: " .. #getElementsByType( "vehicle", getResourceRootElement( resMap ) ) );	end)addEvent( "onMapStarting" )addEventHandler( "onMapStarting", g_Root,	function( mapinfo, mapoptions, gameoptions )	--[[		for i, k in pairs( mapinfo ) do			outputConsole( tostring( i ) .." : ".. tostring( k ) );		end		for i, k in pairs( mapoptions ) do			outputConsole( tostring( i ) .." : ".. tostring( k ) );		end		for i, k in pairs( gameoptions ) do			outputConsole( tostring( i ) .." : ".. tostring( k ) );		end]]		--outputChatBox( "vehicle number: "..tostring( #getElementsByType( "vehicle", getResourceRootElement( g_MapRes ) ) ) );	end)addEvent( "onPlayerPickupRacePickup" )addEventHandler( "onPlayerPickupRacePickup", g_Root, 	function( pickup )		if pickup.type == "nitro" then			setVehicleNOS( getPedOccupiedVehicle( source ), 100 );		end	end)function setVehicleNOS( vehicle, nos )	if getElementData( vehicle, "NOS" ) == 100 then		triggerClientEvent( getVehicleOccupant( vehicle, 0 ), "refillNOS", vehicle, 100 );	else		setElementData( vehicle, "NOS", 100, true );	endend